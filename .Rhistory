library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(nflreadr)
library(readr)
library(tidyr)
library(stringr)
library(scales)
library(purrr)
library(lubridate)
library(xgboost)
# Load your combined dataset (already merged)
all_data <- read.csv("all_data.csv")  # Adjust the path if necessary
df <- load_players()
all_data <- all_data %>%
left_join(df %>% select(smart_id, birth_date), by = "smart_id")
all_data <- all_data %>%
# Ensure birth_date is a Date
mutate(birth_date = as.Date(birth_date)) %>%
# Extract birth year and month-day
mutate(
birth_year = year(birth_date),
birth_month_day = format(birth_date, "%m-%d")
) %>%
# Compute nfl_age using the Year column (use backticks to reference it)
mutate(
nfl_age = if_else(
birth_month_day <= "09-04",
as.numeric(`Year`) - birth_year,
as.numeric(`Year`) - birth_year - 1
)
)
all_data <- all_data %>%
distinct(player_id, Year, Category, .keep_all = TRUE)
defense <- all_data %>%
filter(!is.na(grades_defense))
defense <- defense %>%
filter(snap_counts_defense >= 100)
defense <- defense %>%
filter(!is.na(grades_defense), !is.na(snap_counts_defense)) %>%
group_by(player_id) %>%
mutate(grades_weighted = weighted.mean(grades_defense, snap_counts_defense, na.rm = TRUE)) %>%
ungroup()
merged_df <- read.csv("C:/Users/jackd/OneDrive/Desktop/UC BANA/Capstone/College/Defense/Overall/Merged_Defense_Data.csv")
cvg <- read.csv("College/Defense/Coverage Scheme/Coverage Scheme All Years.csv")
passrush <- read.csv("College/Defense/Pass Rush/Pass Rush All Years.csv")
rundef <- read.csv("College/Defense/Run Defense/Run Defense All Years.csv")
slot <- read.csv("College/Defense/Slot/Slot All Years.csv")
slot <- slot %>%
select(-c(player_game_count, receptions, targets, yards, qb_rating_against,
coverage_snaps_per_reception, team_name))
rundef <- rundef %>%
select(-c(player_game_count, grades_coverage_defense, grades_defense_penalty, grades_defense,
grades_pass_rush_defense, grades_run_defense, grades_tackle, missed_tackles, snap_counts_run,
stops, declined_penalties, penalties, team_name))
passrush <- passrush %>%
select(-c(player_game_count, grades_pass_rush_defense, pass_rush_wins, prp, snap_counts_pass_play,
true_pass_set_prp, declined_penalties, true_pass_set_pass_rush_wins,
true_pass_set_grades_pass_rush_defense, true_pass_set_snap_counts_pass_rush,
total_pressures, true_pass_set_total_pressures, snap_counts_pass_rush,
true_pass_set_snap_counts_pass_play, penalties, team_name
))
rundef <- rundef %>%
select(-c(player_game_count, grades_coverage_defense, grades_defense_penalty, grades_defense,
grades_pass_rush_defense, grades_run_defense, grades_tackle, missed_tackles, snap_counts_run,
stops, declined_penalties, penalties, team_name))
library(shiny); runApp('Prospect Projections Shiny.R')
# --- STEP 1: Save Identifier Columns ---
# Include the college_age column along with others for a richer context.
ids <- DI_df_existing %>% select(player_id, player, nfl_age, college_age)
# Ensure factor variables (like college_conference) have consistent levels.
DI_df_existing$college_conference <- factor(
DI_df_existing$college_conference,
levels = levels(train_data$college_conference)
)
source("C:/Users/conno/Documents/GitHub/ML-NFL-Prospect-Repository/Model.R")
source("C:/Users/conno/Documents/GitHub/ML-NFL-Prospect-Repository/Model.R")
source("C:/Users/conno/Documents/GitHub/ML-NFL-Prospect-Repository/Model.R")
runApp('Prospect Projections Shiny.R')
source("C:/Users/conno/Documents/GitHub/ML-NFL-Prospect-Repository/githubpush.R")
source("C:/Users/conno/Documents/GitHub/ML-NFL-Prospect-Repository/githubpush.R")
source("C:/Users/conno/Documents/GitHub/ML-NFL-Prospect-Repository/githubpush.R")
runApp('Prospect Projections Shiny.R')
